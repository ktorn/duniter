#!/usr/bin/env node
"use strict";

const co = require('co');
const duniter = require('../index');
const stack = duniter.statics.autoStack();

return co(function*() {

  // Specific errors handling
  process.on('uncaughtException', (err) => {
    // Dunno why this specific exception is not caught
    if (err.code !== "EADDRNOTAVAIL" && err.code !== "EINVAL") {
      duniter.statics.logger.error(err);
      process.exit(2);
    }
  });

  try {
    yield stack.executeStack(process.argv);
    // Everything went well, close Duniter quietly.
    process.exit();
  } catch (e) {
    // If an unhandled error occured
    duniter.statics.logger.error(e);
    process.exit(1);
  } finally {
    // If we did not succeed to close before, force close with error.
    process.exit(100);
  }
});
